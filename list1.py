# 리스트
# [인덱스 번호]를 이용해서 리스트내에서 원하는 요소를 추출한다.

demo = [1,2,3,4,5]
print(demo) # [1,2,3,4,5]
print(demo[0]) # 1
print(demo[0]+demo[-1]) # 연산도 가능하다 결과는 1 + 5

demo = [1,2,3, ["a","b","c"]]
print(demo[0]) # 1
print(demo[3]) # ["a", "b", "c"]
print(demo[3][-1]) # c


# slicing : 리스트내에서 위치값으로 원하는 가져오기
str = [1, 2, 3, ["a", "b", "c"], 4, 5]
print(str[1])  # 1
print(str[2])  # 2
print(str[3])  # ["a", "b", "c"],
print(str[2:5]) # [3, ['a', 'b', 'c'], 4] , 2번째부터 4번째까지 출력, 여기서 5는 포함되지 않음



# 리스트 값 수정하기
a = [1,2,3]
a[2] = 4 # 인덱스번호 2번 순서상 3번째에 4를 입력
print(a) # [1, 2, 4] 

# 리스트 값 삭제하기(del)
a = [1,2,3,4,5,6,7,8,9,10]
del a[9] # 9번째 자리수 삭제
print(a) # [1,2,3,4,5,6,7,9]
del a[3:] # 3번째자리수 이후 모두 삭제
print(a) # [1, 2, 3]


# 리스트 값 추가하기(append, extend)

a = [1,2,3,4,5]
a.append(6) # a 리스트 마지막 요소로 6을 삽입
print(a) # [1, 2, 3, 4, 5, 6]
a.append([7,8,9,10]) # 리스트 a에 리스트 [7,8,9,10]를 추가함
print('append : ',a) # [1, 2, 3, 4, 5, 6, [7, 8, 9, 10]]

b = [1,2,3,4,5]
b.extend(["1","2","3","4"]) # append는 배열의 끝에 추가하는 것이고  extend는 확장의 개념으로 결과를 비교해본다
print('extend : ',b) # [1, 2, 3, 4, 5, '1', '2', '3', '4']


# 리스트 정렬(sort)
a = [1,4,3,2,5]
a.sort() # 오른차순 정렬
print(a) # [1, 2, 3, 4, 5]

# 리스트 뒤집기(reverse)
a = ['a', 'b', 'c', 'z', 'f', 'i']
a.reverse()
print(a) # ['i', 'f', 'z', 'c', 'b', 'a']


# 리스트 요소 삽입(insert)
a = [1,2,3]
a.insert(0,10) # 인덱스 0번째 자리에 10을 넣어줌
print(a) # [10, 1, 2, 3]


# 리스트 요소 제거(remove) : 첫번째로 나오는 요소를 삭제해줌
a = [1,2,3,1,2,3]
a.remove(3) # 리스트 내용 중 같은 값이 있는 경우에 첫번째로나오는 요소를 삭제
print(a) # [1, 2, 1, 2, 3]


# 리스트 요소 끄집어 내기(pop) - 리스트내 마지막 요소를 삭제
print("리스트 요소 끄집어 내기(pop)")
a = [1,2,3]
print(a) # [1,2,3]
b= a.pop() # 맨 뒤에 요소 1개(3)를 끄집어 냄
print('b=a.pop() a는 ',a) # [1,2]
print('b=a.pop() b는 ',b) # 3

a.pop() # 맨 뒤에 요소 1개(2)를 끄집어 냄
print(a) # [1]
a.pop() # 맨 뒤에 요소 1개(1)를 끄집어 냄
print(a) # [] 빈요소만 남는다


# 리스트에 포함된 요소 x의 개수 세기(count)
a = [1,2,3,1]
b = ["a", "b", "c", "a", "d", "e", "a"]
print(a.count(1)) # 리스트 중에서 'a'가 몇개 있는지 센다 결과 2
print(b.count("a")) # 리스트 b에서 'a'가 3개 있음